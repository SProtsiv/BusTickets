// <auto-generated />
using BusTickets.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BusTicket.Migrations
{
    [DbContext(typeof(BusTicketDbContext))]
    partial class BusTicketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusTickets.DataAccess.Driver", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.Property<string>("Phone_Number")
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("BusTickets.DataAccess.Review", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DriverID");

                    b.Property<string>("Explanation")
                        .HasMaxLength(50);

                    b.Property<int>("Number_Of_Seats");

                    b.Property<int>("Opinion");

                    b.HasKey("ID");

                    b.HasIndex("DriverID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BusTickets.DataAccess.Review", b =>
                {
                    b.HasOne("BusTickets.DataAccess.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
